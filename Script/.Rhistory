source('~/steam/Script/auc.R')
histogram(~gbm.probs$PS|testData$Class,xlab="Probability of Poor Segmentation")
gbm.ROC
gbm.ROC$auc
source('~/steam/Script/auc.R')
prSummary(testX, lev = levels(testData$Class))
prSummary(testData, lev = levels(testData$Class))
source('~/steam/Script/auc.R')
source('~/steam/Script/auc2.R')
source('~/steam/Script/auc2.R')
source('~/steam/Script/auc2.R')
View(data.train)
result.roc
x = data.train[,-5]
View(x)
source('~/steam/Script/auc3.R')
library(caret)
library (ROCR)
data(iris)
iris <- iris[iris$Species == "virginica" | iris$Species == "versicolor", ]
iris$Species <- factor(iris$Species)  # setosa should be removed from factor
iris$Species
View(data.test)
library(caret)
library(ROCR)
data(iris)
iris <- iris[iris$Species == "virginica" | iris$Species == "versicolor", ]
iris$Species <- factor(iris$Species)  # setosa should be removed from factor
samples <- sample(NROW(iris), NROW(iris) * .7)
data.train <- iris[samples, ]
data.test <- iris[-samples, ]
forest.model <- train(Species ~., data.train)
y <- data.test$Species # logical array of positive / negative cases
predictions <- predict(forest.model, data.test, type="prob") # Prediction
pred <- prediction(predictions, y);
# Recall-Precision curve
RP.perf <- performance(pred, "prec", "rec");
plot (RP.perf);
load("/run/user/1000/gvfs/sftp:host=di4.vcloud,user=baowaly/home/baowaly/steam/Evaluation/RG_GBM_All_V50_S100.Rdata")
View(comb.score)
load("/home/mmnet/steam/Evaluation/RG_GBM_All_V10_S20.Rdata")
View(comb.score)
load("/home/mmnet/steam/Evaluation/RG_GBM_All_V3_S10.Rdata")
View(comb.score)
load("/home/mmnet/steam/Evaluation/RG_GBM_All_V50_S100.Rdata")
View(comb.score)
source('~/steam/Script/test.R')
cor(predicted, actual)
cor.test(predicted, actual)
cor(actual, predicted)
cor.test(actual, predicted)
cor(actual, predicted)
cor.test(actual, predicted)
actual <- c(4, 6, 9, 10, 4, 6, 4, 7, 8, 7)
predicted <- c(5, 6, 8, 10, 4, 8, 4, 9, 8, 9)
# Calculate error
error <- actual - predicted
# Example of invocation of functions
print(rmse(error))
print(mae(error))
cor(actual, predicted)
cor.test(actual, predicted)
a<-10
print(a)
cat(a)
load("/run/user/1000/gvfs/sftp:host=di4.vcloud,user=baowaly/home/baowaly/steam/Evaluation/RG_GBM_All_V50_S80.Rdata")
View(comb.score)
summary(comb.score)
l.counter <- 1
paste0("Evaluation/xgboost.model.", l.counter)
